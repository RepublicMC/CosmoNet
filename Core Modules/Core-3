options:
#
# For more information on customization & configuration settings,
# visit https://www.vehicola.github.io/ion-project
#
	p: &f&l(&a&lCosmo&d&lNet&f&l)
	t: &a
	h: &d
	em: &cInvalid Permissions
	chatSpacer: &8»
	chatColor: &f
command /Core [<text>]:
	description: Shows all commands in Proton
	trigger:
		if arg 1 is not set:
			send "&cUsage: /Core [help|reload]"
		if arg 1 is "help":
			send "&4&m---+---&r &cCore &4&m---+---&r"
			send " &8• &7A List of commands can be found here:"
			send " &f&nhttps://goo.gl/7wmVnx"
		else if arg 1 is "reload" or "rl":
			if sender has permission "Core.reload":
				send "{@p} Reloading {@h}Core{@t}..."
				wait 1 second
				if sender is op:
					player command "/sk reload %skript%"
				else:
					console command "/sk reload %skript%"
					wait 3 seconds
					send "{@p} Successfully reloaded {@h}Core{@t}."
		else if arg 1 is set:
			send "&c&oInvalid Argument."
			send "&cUsage: /Core [help|reload]"
command /chat [<text>] [<text>] [<text>]:
	permission: Core.chat
	permission message: {@em}
	description: Edit Chat Groups
	usage: /Core help
	trigger:
		if arg 1 is not set:
			player command "/Core help"
		else if arg 1 is "create":
			if arg 2 is not set:
				send "&c&oInvalid Argument."
				send "&cUsage: /chat create [groupName]"
			else if arg 2 is set:
				if {Core.groups::%arg-2%} is true:
					send "&c&oGroup already exists."
				else:
					send "{@p} Group {@h}%arg-2%{@t} created."
					set {Core.groups::%arg-2%} to true
		else if arg 1 is "remove" or "delete":
			if arg 2 is not set:
				send "&c&oInvalid Argument."
				send "&cUsage: /chat remove [groupName]"
			else if arg 2 is set:
				if {Core.groups::%arg-2%} is true:
					send "{@p} Group {@h}%arg-2%{@t} deleted."
					remove arg-2 from {Core.groups::*}
					delete {Core.groupPrefix::%arg-2%}
					delete {Core.groupSuffix::%arg-2%}
					delete {Core.groups::%arg-2%}
				else:
					send "&c&oGroup does not exist."
		else if arg 1 is "info":
			if arg 2 is set:
				if {Core.groups::%arg-2%} is true:
					send "{@p} Chat Group: {@h}%arg-2%{@t}"
					send "   &7• {@t}Prefix:&r %colored {Core.groupPrefix::%arg-2%}%"
					send "   &7• {@t}Suffix:&r %colored {Core.groupSuffix::%arg-2%}%"
					send "   &7• {@t}Players: &a%{Core.group.%arg-2%::*}%"
				else:
					send "&c&oGroup does not exist."
			else:
				send "&c&oInvalid Argument."
				send "&cUsage: /chat info [groupName]"
		else if arg 1 is "prefix":
			if arg 2 is set:
				if arg 3 is set:
					if {Core.groups::%arg-2%} is true:
						send "{@p} Group {@h}%arg-2%{@t}'s prefix has been set to &r%arg-3%{@t}."
						set {Core.groupPrefix::%arg-2%} to "%arg-3%"
					else:
						send "&c&oGroup does not exist."
				else:
					send "&c&oInvalid Argument."
					send "&cUsage: /chat prefix %arg-2% [prefix]"
			else:
				send "&c&oInvalid Argument."
				send "&cUsage: /chat prefix [groupName] [prefix]"
		else if arg 1 is "suffix":
			if arg 2 is set:
				if arg 3 is set:
					if {Core.groups::%arg-2%} is true:
						send "{@p} Group {@h}%arg-2%{@t}'s suffix has been set to &r%arg-3%{@t}."
						set {Core.groupSuffix::%arg-2%} to "%arg-3%"
					else:
						send "&c&oGroup does not exist."
				else:
					send "&c&oInvalid Argument."
					send "&cUsage: /chat suffix %arg-2% [prefix]"
			else:
				send "&c&oInvalid Argument."
				send "&cUsage: /chat suffix [groupName] [prefix]"
		else if arg 1 is "setPlayer" or "addPlayer":
			if arg 2 is set:
				if arg 3 is set:
					if {Core.groups::%arg-2%} is true:
						set {_player} to arg-3 parsed as a player
						set {Core.group::%{_player}%} to "%arg-2%"
						add {_player} to {Core.group.%arg-2%::*}
						#if "{@permissionManager}" is "pex":
						#	console command "/pex user %{_player}% add Core.group.%arg-2%"
						#else if "{@permissionManager}" is "essentials" or "groupManager":
						#	console command "/manuaddp %{_player}% Core.group.%arg-2%"
						send "{@p} {@h}%{_player}%{@t}'s chat group has been set to {@h}%arg-2%{@t}."
					else:
						send "&c&oGroup does not exist."
				else:
					send "&c&oInvalid Argument."
					send "&cUsage: /chat setPlayer %arg-2% [player]"
			else:
				send "&c&oInvalid Argument."
				send "&cUsage: /chat setPlayer [groupName] [player]"
		else:
			send "&c&oInvalid Argument."
			send "&cUsage: /Core help"
		stop
on chat:
	cancel event
	if {Core.group::%event-player%} is set:
		#if {Core.groups::*} contains "%{Core.group::%event-player%}%":
		if {Core.groups::*} is true:
			set {_group} to "%{Core.group::%event-player%}%"
			if "%{Core.groupPrefix::%{_group}%}%" is not "<none>":
				if "%{Core.groupSuffix::%{_group}%}%" is not "<none>":
					broadcast "%colored {Core.groupPrefix::%{_group}%}% %name of player% %colored {Core.groupSuffix::%{_group}%}% {@chatSpacer} {@chatColor}%message%"
				else:
					broadcast "%colored {Core.groupPrefix::%{_group}%}% %name of player% {@chatSpacer} {@chatColor}%message%"
			else:
				broadcast "&f%name of player% {@chatSpacer} {@chatColor}%message%"
		else:
			broadcast "&f%name of player% {@chatSpacer} {@chatColor}%message%"
	else:
		broadcast "&f%name of player% {@chatSpacer} {@chatColor}%message%"
